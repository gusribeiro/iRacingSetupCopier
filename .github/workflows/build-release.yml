name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite execução manual

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Timeout para evitar jobs travados

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Necessário para gerar notas de release completas

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'  # Habilita cache de dependências

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
      continue-on-error: false

    - name: Build executable
      run: |
        pyinstaller --onefile --name iRacingSetupCopier src/setupCopier.py
      continue-on-error: false

    - name: Verify executable
      run: |
        if [ ! -f "dist/iRacingSetupCopier" ]; then
          echo "Executable was not created!"
          exit 1
        fi
        # Verifica se o arquivo tem permissões de execução
        chmod +x dist/iRacingSetupCopier

    - name: Generate version
      id: version
      run: |
        # Gera versão baseada na data e commit
        VERSION="v$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git tag -a "${{ steps.version.outputs.version }}" -m "Release ${{ steps.version.outputs.version }}"
        git push origin "${{ steps.version.outputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/iRacingSetupCopier
        generate_release_notes: true
        tag_name: ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: false
